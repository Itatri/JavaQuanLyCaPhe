package frmQLCafe;

import java.awt.*;
import java.awt.print.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.border.TitledBorder;
import javax.swing.border.EtchedBorder;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class frmQuanLyHoaDon extends JFrame implements Serializable, Printable {
    private static final long serialVersionUID = 1L;
    private DefaultTableModel invoiceTableModel;
    private JTextArea textAreaTongTien;
    private JTable tableCTHoaDon;
    private Connection connection;
    @SuppressWarnings("unused")
    private int maDonHang;

    public frmQuanLyHoaDon() {
        this(1); // default maDonHang = 1
    }
    
    private void connectToDatabase() {
        connection = DatabaseConnection.getConnection();
    }

    public frmQuanLyHoaDon(int maDonHang) {
        this.maDonHang = maDonHang;
        initialize();
        connectToDatabase();
        loadData(maDonHang);
    }

    private void initialize() {
        setTitle("Hóa Đơn Thanh Toán");
        setSize(800, 600);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        getContentPane().setLayout(new BorderLayout());
        setResizable(false); // Không cho phép thay đổi kích thước
        setLocationRelativeTo(null); // Căn giữa màn hình

        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel.setBackground(Color.BLACK);
        getContentPane().add(panel, BorderLayout.NORTH);

        JLabel lblHan = new JLabel("HÓA ĐƠN ");
        lblHan.setForeground(Color.WHITE);
        lblHan.setFont(new Font("Tahoma", Font.BOLD, 20));
        panel.add(lblHan);

        JPanel panel_2 = new JPanel();
        panel_2.setBackground(Color.WHITE);
        panel_2.setBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, Color.WHITE, new Color(160, 160, 160)), "Chi Tiết Hóa Đơn", TitledBorder.LEADING, TitledBorder.TOP, null, Color.BLACK));
        panel_2.setLayout(new BorderLayout());
        getContentPane().add(panel_2, BorderLayout.CENTER);

        tableCTHoaDon = new JTable();
        tableCTHoaDon.setBackground(new Color(242, 242, 242));
        panel_2.add(new JScrollPane(tableCTHoaDon), BorderLayout.CENTER);

        JPanel bottomPanel = new JPanel();
        bottomPanel.setLayout(new BorderLayout());
        getContentPane().add(bottomPanel, BorderLayout.SOUTH);

        JPanel totalPanel = new JPanel();
        totalPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
        bottomPanel.add(totalPanel, BorderLayout.CENTER);

        JLabel lblNewLabel_1_3 = new JLabel("Tổng Tiền:");
        lblNewLabel_1_3.setForeground(Color.BLACK);
        lblNewLabel_1_3.setFont(new Font("Tahoma", Font.BOLD, 12));
        totalPanel.add(lblNewLabel_1_3);

        textAreaTongTien = new JTextArea(1, 20);
        textAreaTongTien.setEditable(false);
        totalPanel.add(textAreaTongTien);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));
        bottomPanel.add(buttonPanel, BorderLayout.EAST);

        JButton btnInHoaDon = new JButton("In Hóa Đơn");
        btnInHoaDon.setForeground(Color.WHITE);
        btnInHoaDon.setBackground(Color.BLACK);
        btnInHoaDon.setFont(new Font("Tahoma", Font.BOLD, 12));
        btnInHoaDon.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                printInvoice();
            }
        });
        buttonPanel.add(btnInHoaDon);

        JButton btnQuayLaiMenu = new JButton("Quay lại Menu");
        btnQuayLaiMenu.setForeground(Color.WHITE);
        btnQuayLaiMenu.setBackground(Color.BLACK);
        btnQuayLaiMenu.setFont(new Font("Tahoma", Font.BOLD, 12));
        btnQuayLaiMenu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                quayLaiMenu();
            }
        });
        buttonPanel.add(btnQuayLaiMenu);

        String[] columns = {"Tên Món", "Tên Khách Hàng", "Giá", "Số Lượng", "Nhân viên", "Phương thức thanh toán", "Ngày giờ in hóa đơn"};
        invoiceTableModel = new DefaultTableModel(columns, 0);
        tableCTHoaDon.setModel(invoiceTableModel);
    }

   

    private void loadData(int maDonHang) {
        String query = "SELECT sp.Ten AS TenMon, kh.Ten AS TenKhachHang, sp.Gia, ct.SoLuong, nv.Ten AS TenNhanVien, dh.PhuongThucThanhToan, dh.NgayDatHang " +
                       "FROM chitietdonhang ct " +
                       "JOIN sanpham sp ON ct.MaSanPham = sp.MaSanPham " +
                       "JOIN donhang dh ON ct.MaDonHang = dh.MaDonHang " +
                       "JOIN khachhang kh ON dh.MaKhachHang = kh.MaKhachHang " +
                       "JOIN nhanvien nv ON dh.MaNhanVien = nv.MaNhanVien " +
                       "WHERE ct.MaDonHang = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setInt(1, maDonHang);
            ResultSet resultSet = preparedStatement.executeQuery();
            double total = 0.0;
            invoiceTableModel.setRowCount(0);
            while (resultSet.next()) {
                String tenMon = resultSet.getString("TenMon");
                String tenKhachHang = resultSet.getString("TenKhachHang");
                BigDecimal gia = resultSet.getBigDecimal("Gia");
                int soLuong = resultSet.getInt("SoLuong");
                String tenNhanVien = resultSet.getString("TenNhanVien");
                String phuongThucThanhToan = resultSet.getString("PhuongThucThanhToan");
                String ngayGioInHoaDon = resultSet.getString("NgayDatHang");
                total += resultSet.getDouble("Gia") * soLuong;
                invoiceTableModel.addRow(new Object[]{tenMon, tenKhachHang, gia, soLuong, tenNhanVien, phuongThucThanhToan, ngayGioInHoaDon});
            }
            textAreaTongTien.setText(String.valueOf(total));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void printInvoice() {
        PrinterJob printerJob = PrinterJob.getPrinterJob();
        printerJob.setPrintable(this);
        if (printerJob.printDialog()) {
            try {
                printerJob.print();
            } catch (PrinterException e) {
                e.printStackTrace();
            }
        }
    }

    @Override
    public int print(Graphics g, PageFormat pf, int page) throws PrinterException {
        if (page > 0) {
            return NO_SUCH_PAGE;
        }

        Graphics2D g2d = (Graphics2D) g;
        g2d.translate(pf.getImageableX(), pf.getImageableY());

        g.setFont(new Font("Serif", Font.PLAIN, 10));
        g.drawString("HÓA ĐƠN", 100, 10);

        int y = 30;
        g.drawString("Tên Món", 10, y);
        g.drawString("Tên Khách Hàng", 110, y);
        g.drawString("Giá", 210, y);
        g.drawString("Số Lượng", 310, y);
        g.drawString("Nhân viên", 410, y);
        g.drawString("Phương thức thanh toán", 510, y);
        g.drawString("Ngày giờ in hóa đơn", 610, y);

        for (int i = 0; i < invoiceTableModel.getRowCount(); i++) {
            y += 20;
            g.drawString((String) invoiceTableModel.getValueAt(i, 0), 10, y);
            g.drawString((String) invoiceTableModel.getValueAt(i, 1), 110, y);
            g.drawString(String.valueOf(invoiceTableModel.getValueAt(i, 2)), 210, y);
            g.drawString(String.valueOf(invoiceTableModel.getValueAt(i, 3)), 310, y);
            g.drawString((String) invoiceTableModel.getValueAt(i, 4), 410, y);
            g.drawString((String) invoiceTableModel.getValueAt(i, 5), 510, y);
            g.drawString((String) invoiceTableModel.getValueAt(i, 6), 610, y);
        }

        y += 40;
        g.drawString("Tổng Tiền: " + textAreaTongTien.getText(), 10, y);

        return PAGE_EXISTS;
    }

    private void quayLaiMenu() {
        this.dispose();
        frmQuanLyMenu menuForm = new frmQuanLyMenu();
        menuForm.setVisible(true);
    }

    public static void main(String[] args) {
        frmQuanLyHoaDon invoiceForm = new frmQuanLyHoaDon(1);
        invoiceForm.setVisible(true);
    }
}
